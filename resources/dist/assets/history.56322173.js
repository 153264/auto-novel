import{j as S,m as _,k as z,l as o,n as l,p as r,d as u,q as w,s as g,v as b,x as R,y as m}from"./index.b447288a.js";import{t as T}from"./provider.ec926eef.js";function O(){const e=S(_,null);return e===null&&z("use-message","No outer <n-message-provider /> founded. See prerequisite in https://www.naiveui.com/en-US/os-theme/components/message for more details. If you want to use `useMessage` outside setup, please check https://www.naiveui.com/zh-CN/os-theme/components/message#Q-&-A."),e}const c=o("li",{transition:"color .3s var(--n-bezier)",lineHeight:"var(--n-line-height)",margin:"var(--n-li-margin)",marginBottom:0,color:"var(--n-text-color)"}),d=[o("&:first-child",`
 margin-top: 0;
 `),o("&:last-child",`
 margin-bottom: 0;
 `)],I=o([l("ol",{fontSize:"var(--n-font-size)",padding:"var(--n-ol-padding)"},[r("align-text",{paddingLeft:0}),c,d]),l("ul",{fontSize:"var(--n-font-size)",padding:"var(--n-ul-padding)"},[r("align-text",{paddingLeft:0}),c,d])]),P=Object.assign(Object.assign({},g.props),{alignText:Boolean}),B=u({name:"Ul",props:P,setup(e){const{mergedClsPrefixRef:s,inlineThemeDisabled:t}=w(e),a=g("Typography","-xl",I,T,e,s),i=b(()=>{const{common:{cubicBezierEaseInOut:h},self:{olPadding:p,ulPadding:f,liMargin:v,liTextColor:x,liLineHeight:y,liFontSize:C}}=a.value;return{"--n-bezier":h,"--n-font-size":C,"--n-line-height":y,"--n-text-color":x,"--n-li-margin":v,"--n-ol-padding":p,"--n-ul-padding":f}}),n=t?R("ul",void 0,i,e):void 0;return{mergedClsPrefix:s,cssVars:t?void 0:i,themeClass:n==null?void 0:n.themeClass,onRender:n==null?void 0:n.onRender}},render(){var e;const{mergedClsPrefix:s}=this;return(e=this.onRender)===null||e===void 0||e.call(this),m("ul",{class:[`${s}-ul`,this.themeClass,this.alignText&&`${s}-ul--align-text`],style:this.cssVars},this.$slots)}}),M=u({name:"Li",render(){return m("li",null,this.$slots)}});function j(){const e=localStorage.getItem("histories");if(e)try{return JSON.parse(e)}catch{localStorage.removeItem("histories")}return[]}function N(e){const s=j().filter(i=>i.url!=e.url);s.unshift(e);const t=10;s.length>t&&(s.length=t);const a=JSON.stringify(s);localStorage.setItem("histories",a)}export{M as _,B as a,N as b,j as g,O as u};
